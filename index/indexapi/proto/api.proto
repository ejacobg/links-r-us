syntax="proto3";
package proto;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// See https://protobuf.dev/reference/go/go-generated/#package
option go_package = "github.com/ejacobg/links-r-us/index/indexapi/proto";

service TextIndexer {
  // Index inserts a new document to the index or updates the index entry for
  // and existing document.
  rpc Index(Document) returns (Document);

  // Search the index for a particular query and stream the results back to
  // the client. The first response will include the total result count while
  // all subsequent responses will include documents from the resultset.
  rpc Search(Query) returns (stream QueryResult);

  // UpdateScore updates the PageRank score for a document with the specified
  // link ID.
  rpc UpdateScore(UpdateScoreRequest) returns (google.protobuf.Empty);
}

// Document represents an indexed document.
message Document {
  bytes link_id = 1;
  string url = 2;
  string title = 3;
  string content = 4;
  google.protobuf.Timestamp indexed_at = 5;
}

// Query represents a search query.
message Query {
  Type type = 1;
  string expression = 2;

  // Allow for pagination.
  uint64 offset = 3;

  enum Type {
    // Match queries are the default.
    MATCH = 0;
    PHRASE = 1;
  }
}

// QueryResult contains either the total count of results for a query or a
// single document from the resultset.
message QueryResult {
  // The first QueryResult will contain the document count, and all subsequent responses will contain the actual documents.
  oneof result {
    uint64 doc_count = 1;
    Document doc = 2;
  }
}

// UpdateScoreRequest encapsulates the parameters for the UpdateScore RPC.
message UpdateScoreRequest {
  bytes link_id = 1;
  double page_rank_score = 2;
}

